[
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "GetUsers",
    "RelativePath": "api/Account",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Modulap.Dto.UserDetailDto, Modulap, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "GetAdmins",
    "RelativePath": "api/Account/admins",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Modulap.Dto.UserDetailDto, Modulap, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "ChangePassword",
    "RelativePath": "api/Account/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "changePasswordDto",
        "Type": "Modulap.Dto.ChangePasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "Getcliente",
    "RelativePath": "api/Account/cliente",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Modulap.Dto.UserDetailDto, Modulap, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "DeleteUser",
    "RelativePath": "api/Account/delete",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.DeletUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "GetUserDetail",
    "RelativePath": "api/Account/detail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Modulap.Dto.UserDetailDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "GetUserDetail1",
    "RelativePath": "api/Account/detailClient",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Modulap.Dto.UserDatailClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Account/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forgotPasswordDto",
        "Type": "Modulap.Dto.ForgotPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "Login",
    "RelativePath": "api/Account/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "Modulap.Dto.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Modulap.Dto.AuthResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "RefreshToken",
    "RelativePath": "api/Account/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenDto",
        "Type": "Modulap.Dto.TokenDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Modulap.Dto.AuthResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "Register",
    "RelativePath": "api/Account/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDto",
        "Type": "Modulap.Dto.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "ResetPassword",
    "RelativePath": "api/Account/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetPasswordDto",
        "Type": "Modulap.Dto.ResetPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "UpdateUser",
    "RelativePath": "api/Account/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.AccountController",
    "Method": "GetUserDetailById",
    "RelativePath": "api/Account/userdetail/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Modulap.Dto.UserDetailDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.BuysController",
    "Method": "BuysRegister",
    "RelativePath": "api/Buys/BuysRegister",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.BuysCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.BuysController",
    "Method": "GetAllWithDetails",
    "RelativePath": "api/Buys/GetAllWithDetails",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Modulap.Dto.BuysDetailDto, Modulap, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.ComponentController",
    "Method": "GetComponentLotQuantities",
    "RelativePath": "api/Component/GetComponentLotQuantities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ComponentController",
    "Method": "GetComponentsWithAvailableQuantity",
    "RelativePath": "api/Component/GetComponentsLotWithAvailableQuantity",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ComponentController",
    "Method": "RegisterComponent",
    "RelativePath": "api/Component/RegisterComponent",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.ComponentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ComponentController",
    "Method": "RegisterLoss",
    "RelativePath": "api/Component/RegisterLoss",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.RegisterLossDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ComponentCostingController",
    "Method": "GetAllCostings",
    "RelativePath": "api/ComponentCosting/GetAllCostings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.ComponentCostingController",
    "Method": "GetCostingsByComponentName",
    "RelativePath": "api/ComponentCosting/GetCostingsByComponentName/{componentName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "componentName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.DashboardController",
    "Method": "GetTopSellingProducts",
    "RelativePath": "api/Dashboard/top-products",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "GetCalificacionPorClienteYGallinero",
    "RelativePath": "api/Message/Calificacion",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "clientId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "chickenCoopId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "GetComentarioPorId",
    "RelativePath": "api/Message/Comentario/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "GetComentariosConRespuestas",
    "RelativePath": "api/Message/ComentariosConRespuestas",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "CreateMessage",
    "RelativePath": "api/Message/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.CreateComentarioDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "CreateQualification",
    "RelativePath": "api/Message/CreateQualification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.CreateQualificationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "GetPreguntaPorId",
    "RelativePath": "api/Message/Pregunta/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "GetPreguntasConRespuestas",
    "RelativePath": "api/Message/PreguntasConRespuestas",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "GetPreguntasPendientes",
    "RelativePath": "api/Message/PreguntasyComentariosPendientes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.MessageController",
    "Method": "GetResumenCalificaciones",
    "RelativePath": "api/Message/ResumenCalificaciones/{chickenCoopId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chickenCoopId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.PossibleClientController",
    "Method": "GetAll",
    "RelativePath": "api/PossibleClient/getAllPossibleClient",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.PossibleClientController",
    "Method": "GetPossibleClientById",
    "RelativePath": "api/PossibleClient/getPossibleClientById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.PossibleClientController",
    "Method": "Register",
    "RelativePath": "api/PossibleClient/PossibleClientRegister",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "possible",
        "Type": "Modulap.Dto.PossibleClientCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.PossibleClientController",
    "Method": "SetStatusToOne",
    "RelativePath": "api/PossibleClient/setStatusToOne/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ProductController",
    "Method": "AddRecipeToChickenCoop",
    "RelativePath": "api/Product/AddRecipeToChickenCoop",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.RecipeCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ProductController",
    "Method": "CreateChickenCoopWithRecipe",
    "RelativePath": "api/Product/CreateChickenCoopWithRecipe",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.ChickenCoopCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ProductController",
    "Method": "GetAllBasic",
    "RelativePath": "api/Product/GetAllBasic",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ProductController",
    "Method": "GetChickenCoopWithRecipes",
    "RelativePath": "api/Product/GetChickenCoopWithRecipes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ProductionController",
    "Method": "ChangeStatus",
    "RelativePath": "api/Production/ChangeStatus/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "newStatus",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ProductionController",
    "Method": "GetAllAvailableProducts",
    "RelativePath": "api/Production/GetAllAvailableProducts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ProductionController",
    "Method": "GetAllproductRequested",
    "RelativePath": "api/Production/GetAllproductRequested",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.ProductionController",
    "Method": "RegisterMultipleProductionLots",
    "RelativePath": "api/Production/RegisterMultiple",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "lotesDto",
        "Type": "System.Collections.Generic.List\u00601[[Modulap.Dto.ProductionLotCreateDto, Modulap, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.RolesController",
    "Method": "CreateRole",
    "RelativePath": "api/Roles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createRoleDto",
        "Type": "Modulap.Dto.CreateRoleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.RolesController",
    "Method": "GetRoles",
    "RelativePath": "api/Roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Modulap.Dto.RoleResponseDto, Modulap, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.RolesController",
    "Method": "DeleteRole",
    "RelativePath": "api/Roles/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.RolesController",
    "Method": "AssignRole",
    "RelativePath": "api/Roles/assign",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleAssignDto",
        "Type": "Modulap.Dto.RolesAssignDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "ChangeSaleStatus",
    "RelativePath": "api/Sales/ChangeSaleStatus",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.UpdateSaleStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "GenerateEstimate",
    "RelativePath": "api/Sales/GenerateEstimate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.EstimateRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "GetPurchasedProducts",
    "RelativePath": "api/Sales/GetPurchasedProducts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "GetPurchasedProductsById",
    "RelativePath": "api/Sales/GetPurchasedProductsById/{saleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "saleId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "GetSalesWithDetails",
    "RelativePath": "api/Sales/GetSalesWithDetails",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "GetSaleWithDetailsById",
    "RelativePath": "api/Sales/GetSaleWithDetailsById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "PreviewEstimate",
    "RelativePath": "api/Sales/PreviewEstimate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.EstimateRequestDto1",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "RegisterSaleFromEstimate",
    "RelativePath": "api/Sales/RegisterSaleFromEstimate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.RegisterSaleFromEstimateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SalesController",
    "Method": "UpdateSaleWithChickenCoop",
    "RelativePath": "api/Sales/UpdateSaleWithChickenCoop",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.UpdateSaleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SupplierController",
    "Method": "DeleteSupplier",
    "RelativePath": "api/Supplier/deleteSupplier",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.DeleteSupplierDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SupplierController",
    "Method": "GetActiveSuppliers",
    "RelativePath": "api/Supplier/getActiveSuppliers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SupplierController",
    "Method": "GetSupplierById",
    "RelativePath": "api/Supplier/getSupplierById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Modulap.Controllers.SupplierController",
    "Method": "Register",
    "RelativePath": "api/Supplier/registerSupplier",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplier",
        "Type": "Modulap.Dto.RegistesSupplier",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Modulap.Controllers.SupplierController",
    "Method": "UpdateSupplier",
    "RelativePath": "api/Supplier/updateSupplier",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Modulap.Dto.UpdateSupplierDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]